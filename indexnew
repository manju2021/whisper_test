<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>File Upload and Feature Extraction</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KyZXEJv3X4jP2yT7QXB9P8skz0mgv9ABZl9Qxd7U5ocmDpxz1zTrgdyQU6JJXygt" crossorigin="anonymous">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f9f9f9;
        }

        .tabs {
            display: flex;
            cursor: pointer;
            margin-bottom: 20px;
        }

        .tab {
            padding: 15px 20px;
            background-color: #f0f8ff;
            margin-right: 5px;
            border-radius: 5px;
            border: 1px solid #ccc;
        }

        .tab:hover {
            background-color: #e6f7ff;
        }

        .active-tab {
            background-color: #e1f5fe;
            font-weight: bold;
        }

        .tab-content {
            display: none;
        }

        .active-tab-content {
            display: block;
        }

        .card {
            margin-top: 20px;
            border: 1px solid #ddd;
        }

        .form-control {
            height: 150px;
            margin-top: 10px;
        }

        .container {
            margin-top: 30px;
        }
    </style>
</head>

<body>

    <div class="container">
        <!-- Tabs Navigation -->
        <div class="row">
            <div class="col text-center">
                <div class="tabs">
                    <div class="tab active-tab" onclick="showTab(1)">Tab 1: Upload File</div>
                    <div class="tab" onclick="showTab(2)">Tab 2: Transcription</div>
                    <div class="tab" onclick="showTab(3)">Tab 3: Extracted Features</div>
                </div>
            </div>
        </div>

        <!-- Tab Contents -->
        <div class="tab-content active-tab-content" id="tab1">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Upload Your Audio File</h5>
                    <div class="form-group">
                        <input type="file" id="audioFile" class="form-control" accept="audio/*">
                    </div>
                    <button class="btn btn-primary mt-3" onclick="transcribeFile()">Transcribe</button>
                </div>
            </div>
        </div>

        <div class="tab-content" id="tab2">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Transcribed Text</h5>
                    <textarea id="transcribedText" class="form-control" readonly></textarea>
                    <button class="btn btn-success mt-3" onclick="extractFeatures()">Extract Features</button>
                </div>
            </div>
        </div>

        <div class="tab-content" id="tab3">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Extracted Features</h5>
                    <textarea id="extractedFeatures" class="form-control" readonly></textarea>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS & Popper.js (for functionality) -->
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js" integrity="sha384-oBqDVmMz4fnFO9gybL6S8j6dFeVf6UgfXj9e/32z8t4s0G+P5gFqfbVX7bBa8E+z" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js" integrity="sha384-cu5tIu8OFl5l7tC+F67+35Rfz3tzUz0nqgfch5DKwIaO/pNrKvA6ujgXqYhxSgma" crossorigin="anonymous"></script>

    <script>
        let transcribedValue = "";
        let extractedValue = "";

        // Show Tab Functionality
        function showTab(tabIndex) {
            // Hide all tabs content
            const tabs = document.querySelectorAll('.tab-content');
            tabs.forEach((tab) => tab.classList.remove('active-tab-content'));

            // Deactivate all tabs
            const tabLinks = document.querySelectorAll('.tab');
            tabLinks.forEach((tab) => tab.classList.remove('active-tab'));

            // Show the selected tab
            document.getElementById('tab' + tabIndex).classList.add('active-tab-content');
            tabLinks[tabIndex - 1].classList.add('active-tab');
        }

        // Transcribe the file using Flask backend
        function transcribeFile() {
            const fileInput = document.getElementById('audioFile');
            const file = fileInput.files[0];

            if (file) {
                const formData = new FormData();
                formData.append("file", file);

                fetch('/upload', {
                    method: 'POST',
                    body: formData,
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.transcribed_text) {
                            transcribedValue = data.transcribed_text;
                            document.getElementById('transcribedText').value = transcribedValue;
                            showTab(2);  // Switch to Tab 2 after transcription
                        }
                    })
                    .catch(error => alert('Error transcribing file.'));
            } else {
                alert("Please upload an audio file.");
            }
        }

        // Extract features from the transcribed text using Flask backend
        function extractFeatures() {
            const transcribedText = document.getElementById('transcribedText').value;

            fetch('/extract_features', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ transcribed_text: transcribedText })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.features) {
                        extractedValue = JSON.stringify(data.features, null, 2);
                        document.getElementById('extractedFeatures').value = extractedValue;
                        showTab(3);  // Switch to Tab 3 after extracting features
                    }
                })
                .catch(error => alert('Error extracting features.'));
        }
    </script>

</body>
</html>
